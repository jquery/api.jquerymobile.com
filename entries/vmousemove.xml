<?xml version="1.0"?>
<entry name="vmousemove" type="event" return="jQuery">
	<title>vmousemove</title>
	<desc>Virtualized mousemove event handler.</desc>
	<longdesc>
		<p>We provide a set of "virtual" mouse events that attempt to abstract away mouse and touch events. This allows the developer to register listeners for the basic mouse events, such as mousedown, mousemove, mouseup, and click, and the plugin will take care of registering the correct listeners behind the scenes to invoke the listener at the fastest possible time for that device. In touch environments, the plugin retains the order of event firing that is seen in traditional mouse environments, so for example, vmouseup is always dispatched before vmousedown, and vmousedown before vclick, etc. The virtual mouse events also normalize how coordinate information is extracted from the event, so in touch based environments, coordinates are available from the pageX, pageY, screenX, screenY, clientX, and clientY properties, directly on the event object.</p>
		<p>The jQuery Mobile <code>vmousemove</code> event handler simulates the "onmousemove" event handler on mobile devices.</p>
		
		<xi:include href="../includes/core-extension-desc.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		
<pre><code><![CDATA[
$( function () {
	$( document ).on ( "vmousemove", "#target", function(event) {
	var msg = "Handler for .vmousemove() called at ";
	msg += event.pageX + ", " + event.pageY;
	$( "#log" ).append( "<div>" + msg + "</div>" );
});
]]></code></pre>

		<p>
			<iframe src="/resources/vmousedown/example1.html" style="width:100%;height:90px;border:0px"></iframe>
		</p>
		<dd><p>The virtual mouse events can also be configured:</p>
			<ul>
				<li><code>$.vmouse.moveDistanceThreshold</code> (default: 10px) – More than this, then it is a scroll event. The vmousecancel event is called and the TouchMove event is cancelled.</li>
				<li><code>$.vmouse.clickDistanceThreshold</code> (default: 10px) – If a vclick event was already captured and is in the block list, then vclicks less than this distance are ignored.</li>
				<li><code>$.vmouse.resetTimerDuration</code> (default: 1500ms) – More time than this, then it is not a touch event. Scroll, TouchMove and TouchEnd events use this. The block list is cleared.</li>
			</ul>
		</dd>
	</longdesc>
	<added>1.0</added>
	<signature>
		<argument name="preventDefault" type="Function" optional="true">
			<desc>A function to invoke in the event binding to prevent the synthetic click event by the browser.</desc>
		</argument>

	</signature>
	<category slug="events"/>
</entry>
