<?xml version="1.0"?>
<entry name="swipe" type="event" return="jQuery" example-selector="window">
	<title>swipe</title>
	<desc>Triggered when a horizontal drag of 30px or more (and less than 75px vertically) occurs within 1 second duration.</desc>
	<longdesc>
		<p>Triggered when a horizontal drag of 30px or more (and less than 75px vertically) occurs within 1 second duration but these can be configured:
			<ul>
				<li><code>$.event.special.swipe.scrollSupressionThreshold</code> (default: 10px) – More than this horizontal displacement, and we will suppress scrolling.</li>
				<li><code>$.event.special.swipe.durationThreshold</code> (default: 1000ms) – More time than this, and it isn't a swipe.</li>
				<li><code>$.event.special.swipe.horizontalDistanceThreshold</code> (default: 30px) – Swipe horizontal displacement must be more than this.</li>
				<li><code>$.event.special.swipe.verticalDistanceThreshold</code> (default: 75px) – Swipe vertical displacement must be less than this.</li>
			</ul>
		</p>
		<p>The swipe event can also be extend to add your own logic or functionality. The following methods can be extended:</p>
			<ul>
				<li><code>$.event.special.swipe.start</code> Default:
<pre><code>
function( event ) {
	var data = event.originalEvent.touches ?
			event.originalEvent.touches[ 0 ] : event;
	return {
			time: ( new Date() ).getTime(),
			coords: [ data.pageX, data.pageY ],
			origin: $( event.target )
		};
}
</code></pre>
			  	<p>This method recieves a touchstart event and returns an object of data about the starting location.</p>
			  	</li>
			  	<li><code>$.event.special.swipe.stop</code> Default:
<pre><code>
function( event ) {
	var data = event.originalEvent.touches ?
			event.originalEvent.touches[ 0 ] : event;
	return {
			time: ( new Date() ).getTime(),
			coords: [ data.pageX, data.pageY ]
		};
}
</code></pre>
			  	<p>This method recieves a touchend event and returns an object of data about the ending location.</p>
			  	</li>
			  	<li><code>$.event.special.swipe.handleSwipe</code> Default:
<pre><code>
function( start, stop ) {
	if ( stop.time - start.time &lt; $.event.special.swipe.durationThreshold &amp;&amp;
		Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) &gt; $.event.special.swipe.horizontalDistanceThreshold &amp;&amp;
		Math.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) &lt; $.event.special.swipe.verticalDistanceThreshold ) {

		start.origin.trigger( "swipe" )
			.trigger( start.coords[0] &gt; stop.coords[ 0 ] ? "swipeleft" : "swiperight" );
	}
}
</code></pre>
			  	<p>This method recieves the start and stop objects and handles the logic for and triggering for the swipe events.</p>
			  	</li>
			  </ul>
	</longdesc>
	<added>1.0</added>
	<signature>
		<argument name="callback" type="Function" optional="true">
			<desc>A function to invoke after the the swipe event fires.</desc>
		</argument>
	</signature>
	<example>
		<height>120</height>
		<desc>A simple example of the capturing and acting upon a swipe event</desc>
<code><![CDATA[
$(function(){
    $('.box').bind( 'swipe', swipeHandler );
        
	function swipeHandler(event){
		$(event.target).addClass( 'swipe' );
	}
});
]]></code>
<css><![CDATA[
	html, body { padding: 0; margin: 0; }
	html, .ui-mobile, .ui-mobile body {
		height: 105px;
	}
	.ui-mobile, .ui-mobile .ui-page {
		min-height: 105px;
	}
	#nav {
		font-size: 200%;
		width:17.1875em;
		margin:17px auto 0 auto;
	}
	#nav a {
		color: #777;
		border: 2px solid #777;
		background-color: #ccc;
		padding: 0.2em 0.6em;
		text-decoration: none;
		float: left;
		margin-right: 0.3em;
	}
	#nav a:hover {
		color: #999;
		border-color: #999;
		background: #eee; 
	}
	#nav a.selected,
	#nav a.selected:hover {
		color: #0a0;
		border-color: #0a0;
		background: #afa; 
	}
	div.box {
		width: 30em;
		height: 3em;
		background-color: #108040;
	}
	div.box.swipe {
		background-color: #B24926;
	}
]]></css>
<html><![CDATA[
	<h3>Swipe the green rectangle to change its color:</h3>
	<div class="box"></div>
]]></html>
	</example>	
	<category slug="events"/>
</entry>
