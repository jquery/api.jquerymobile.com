<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="button" namespace="fn" type="widget" widgetnamespace="mobile">
	<title>Button Widget</title>
    <desc>Creates a button widget</desc>
    <longdesc>
		<p>Buttons are coded with standard HTML anchor and input elements, then enhanced by jQuery Mobile to make them more attractive and useable on a mobile device.  Use anchor links (<code>a</code> elements) to mark up navigation buttons, and <code>input</code> or <code>button</code> elements for form submission.</p>
			
		<h3>Styling links as buttons</h3>
		<p>In the main content block of a page, you can style any anchor link as a button by adding the <code>data-role="button"</code> attribute. The framework will enhance the link with markup and classes to style the link as a button. For example, this markup: </p>

<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot;&gt;Link button&lt;/a&gt;
</code></pre>

		<p>Produces this <strong>link-based</strong> button:
		<iframe src="/resources/button/example1.html" style="width:100%;height:90px;border:0px"></iframe></p>
        
		<p><strong>Note:</strong> Links styled like buttons have all the same visual options as true form-based buttons below, but there are a few important differences. Link-based buttons aren't part of the <code>button</code> plugin and only just use the underlying <code>buttonMarkup</code> plugin to generate the button styles so the form button methods (enable, disable, refresh) aren't supported. If you need to disable a link-based button (or any element), it's possible to apply the disabled class ui-disabled yourself with JavaScript to achieve the same effect.</p>

<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; class=&quot;ui-disabled&quot;&gt;Link button&lt;/a&gt;
</code></pre>		

		<p>Produces this disabled <strong>link-based</strong> button:
		<iframe src="/resources/button/example2.html" style="width:100%;height:90px;border:0px"></iframe>
		</p>
		
		<h3>Mini version</h3>
        
		<p>For a more compact version that is useful in toolbars and tight spaces, add the <code>data-mini="true"</code> attribute to the button to create a mini version. </p>

<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-mini=&quot;true&quot;&gt;Link button&lt;/a&gt;
</code></pre>

		<p>This will produce a button that is not as tall as the standard version and has a smaller text size.
		<iframe src="/resources/button/example3.html" style="width:100%;height:90px;border:0px"></iframe>
		</p>
        
		<h3>Form buttons</h3>
        
		<p>For ease of styling, the framework automatically converts any <code>button</code> or <code>input</code> element with a <code>type</code> of <code>submit</code>, <code>reset</code>, or <code>button</code> into a custom styled button - there is no need to add the <code> data-role="button"</code> attribute. However, if needed, you can directly call the button plugin on any selector, just like any jQuery plugin:</p>

<pre><code>
$('[type="submit"]').button();
</code></pre>	

		<p><strong>Button</strong> based button:</p>
		
<pre><code>	
&lt;button&gt;Button element&lt;/button&gt;
</code></pre>

		<iframe src="/resources/button/example4.html" style="width:100%;height:90px;border:0px"></iframe>

		<p><strong>Input type="button"</strong> based button:</p>
<pre><code>	
&lt;input type=&quot;button&quot; value=&quot;Button&quot; /&gt;
</code></pre>

		<iframe src="/resources/button/example5.html" style="width:100%;height:90px;border:0px"></iframe>
		
		<p><strong>Input type="submit"</strong> based button:</p>
<pre><code>
&lt;input type=&quot;submit&quot; value=&quot;Submit Button&quot; /&gt;
</code></pre>

		<iframe src="/resources/button/example6.html" style="width:100%;height:90px;border:0px"></iframe>
			
		<p><strong>Input type="reset"</strong> based button:</p>
<pre><code>
&lt;input type=&quot;reset&quot; value=&quot;Reset Button&quot; /&gt;
</code></pre>
		
		<iframe src="/resources/button/example7.html" style="width:100%;height:90px;border:0px"></iframe>

        <h2>Adding Icons to Buttons</h2>
		<p>The jQuery Mobile framework includes a selected set of icons most often needed for mobile apps. To minimize download size, jQuery Mobile includes a single white icon sprite, and automatically adds a semi-transparent black circle behind the icon to ensure that it has good contrast on any background color.</p> 
		
			
			<p>An icon can be added to a button by adding a <code> data-icon</code> attribute on the anchor specifying the icon to display.  For example, the following markup:</p> 
			
<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-icon=&quot;delete&quot;&gt;Delete&lt;/a&gt;
</code></pre>
			
			<p>Creates this button with an icon:
			<iframe src="/resources/button/example8.html" style="width:100%;height:90px;border:0px"></iframe></p>

			
			<p>A more compact button with the <code> data-mini="true"</code> attribute added to the button:
			<iframe src="/resources/button/example9.html" style="width:100%;height:90px;border:0px"></iframe></p>
			
			<h3>Icon set</h3>
			
			<p>The following <code> data-icon</code> attributes can be referenced to create the icons shown below:
			<iframe src="/resources/button/example10.html" style="width:100%;height:1640px;border:0px"></iframe></p>
			
			<h3>Icon positioning</h3>
			<p>By default, all icons in buttons are placed to the left of the button text. 
			<iframe src="/resources/button/example11.html" style="width:100%;height:90px;border:0px"></iframe></p>

			<p>This default may be overridden using the <code> data-iconpos</code> attribute to set the icon to the right, above (top) or below (bottom) the text. For example, the markup:</p> 
<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-icon=&quot;delete&quot; data-iconpos=&quot;right&quot;&gt;Delete&lt;/a&gt;
</code></pre>

			<p>Creates this button with right-aligned icon:
			<iframe src="/resources/button/example12.html" style="width:100%;height:90px;border:0px"></iframe></p>

			<p>Icons can also be positioned above the text by specifying <code> data-iconpos="top"</code>
			<iframe src="/resources/button/example13.html" style="width:100%;height:120px;border:0px"></iframe></p>
		
			<p>Or icons can also be positioned below the text by specifying <code> data-iconpos="bottom"</code>
			<iframe src="/resources/button/example14.html" style="width:100%;height:120px;border:0px"></iframe></p>
		
			<p>You can also create an icon-only button, by setting the <code> data-iconpos</code> attribute to <code>notext</code>. The button plugin will hide the text on-screen, but add it as a <code>title</code> attribute on the link to provide context for screen readers and devices that support tooltips. For example, replacing <code> data-iconpos="right"</code> on the previous example with <code> data-iconpos="notext"</code>:</p>

<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-icon=&quot;delete&quot; data-iconpos=&quot;notext&quot;&gt;Delete&lt;/a&gt;
</code></pre>

			<p>Creates this icon-only button:
			<iframe src="/resources/button/example15.html" style="width:100%;height:60px;border:0px"></iframe></p>
			
			<h3>Mini &amp; Inline</h3>
			<p>The mini and inline attributes can be added to produce more compact buttons:
			<iframe src="/resources/button/example16.html" style="width:100%;height:90px;border:0px"></iframe></p>
			
			<h3>Custom Icons</h3>
			<p>To use custom icons, specify a <code>data-icon</code> value that has a unique name like <code>myapp-email</code> and the button plugin will generate a class by prefixing <code>ui-icon-</code> to the <code> data-icon</code> value and apply it to the button: <code>ui-icon-myapp-email</code>. </p>
			<p>You can then write a CSS rule in your stylesheet that targets the <code>ui-icon-myapp-email</code> class to specify the icon background source. To maintain visual consistency with the rest of the icons, create a white icon 18x18 pixels saved as a PNG-8 with alpha transparency.</p>
			<p>In this example, we're just pointing to a standalone icon image, but you could just as easily use an icon sprite and specify the positioning instead, just like the icon sprite we use in the framework.</p>
		
<pre><code>.ui-icon-myapp-email {
	background-image: url("app-icon-email.png");
}</code></pre>

			<p>This will create the standard resolution icon, but many devices now have very high resolution displays, like the retina display on the iPhone 4. To add a HD icon, create an icon that is 36x36 pixels (exactly double the 18 pixel size), and add second a rule that uses the <code>-webkit-min-device-pixel-ratio: 2</code> media query to target a rule only to high resolution displays. Specify the background image for the HD icon file and set the background size to 18x18 pixels which will fit the 36 pixel icon into the same 18 pixel space. The media query block can wrap multiple icon rules:</p>
<pre><code>
@media only screen and (-webkit-min-device-pixel-ratio: 2) {
	.ui-icon-myapp-email {
		background-image: url("app-icon-email-highres.png");
		background-size: 18px 18px;
	}
	...more HD icon rules go here...
}
</code></pre>			
		 	
		<h3>Icons and themes</h3>
		<p>The semi-transparent black circle behind the white icon ensures good contrast on any background color so it works well with the jQuery Mobile theming system. Here are examples of the same icons sitting on top of a range of different color swatches with themed buttons.</p>
		
		<p><strong>Swatch "a"</strong> themed buttons
		<iframe src="/resources/button/example17.html" style="width:100%;height:190px;border:0px"></iframe></p>
		
		<p><strong>Swatch "b"</strong> themed buttons
		<iframe src="/resources/button/example18.html" style="width:100%;height:190px;border:0px"></iframe></p>
		
		<p><strong>Swatch "c"</strong> themed buttons
		<iframe src="/resources/button/example19.html" style="width:100%;height:190px;border:0px"></iframe></p>	
		
		<h2>Inline buttons</h2>
		
		<p>By default, all buttons in the body content are styled as block-level elements so they fill the width of the screen:
		<iframe src="/resources/button/example20.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p>However, if you want a more compact button that is only as wide as the text and icons inside, add the <code> data-inline="true"</code> attribute to the button:
		<iframe src="/resources/button/example21.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p>If you have multiple buttons that should sit side-by-side on the same line, add the <code> data-inline="true"</code> attribute to each button. This will style the buttons to be the width of their content and float the buttons so they sit on the same line. </p>
			
<pre><code>
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-inline=&quot;true&quot;&gt;Cancel&lt;/a&gt;
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-inline=&quot;true&quot; data-theme=&quot;b&quot;&gt;Save&lt;/a&gt;
</code></pre>

		<p>The result is this:
		<iframe src="/resources/button/example22.html" style="width:100%;height:90px;border:0px"></iframe></p>
			
		<p>Adding the <code>data-mini="true"</code> to the inline buttons creates a more compact version:
		<iframe src="/resources/button/example23.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p>If you want buttons to sit side-by-side but stretch to fill the width of the screen, you can use the content column grids to put normal full-width buttons into 2- or 3-columns.</p>	

		<h3>Icon example</h3>
		
		<p>When an <a href="buttons-icons.html">icon</a> is added to an inline button, the button will grow wider to accommodate the icon:
		<iframe src="/resources/button/example24.html" style="width:100%;height:90px;border:0px"></iframe></p>
			
		<p>A mini version of the same:
		<iframe src="/resources/button/example25.html" style="width:100%;height:90px;border:0px"></iframe></p>

		<h2>Grouped buttons</h2>
		
		<p>Occasionally, you may want to visually group a set of buttons to form a single block that looks contained like a navigation component. To get this effect, wrap a set of buttons in a container with the <code> data-role="controlgroup"</code> attribute - the framework will create a vertical button group, remove all margins and drop shadows between the buttons, and only round the first and last buttons of the set to create the effect that they are grouped together. </p>
		
<pre><code>
&lt;div data-role=&quot;controlgroup&quot;&gt;
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot;&gt;Yes&lt;/a&gt;
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot;&gt;No&lt;/a&gt;
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot;&gt;Maybe&lt;/a&gt;
&lt;/div&gt;
</code></pre>

		<p>By default, grouped buttons are presented as a vertical list:
		<iframe src="/resources/button/example26.html" style="width:100%;height:190px;border:0px"></iframe></p>
		
		<p>By adding the <code>data-type="horizontal"</code> attribute to the <code>controlgroup</code> container, you can swap to a horizontal-style group that floats the buttons side-by-side and sets the width to only be large enough to fit the content. (Be aware that these will wrap to multiple lines if the number of buttons or the overall text length is too wide for the screen.)</p>
		
		<p>Horizontal grouped buttons:
		<iframe src="/resources/button/example27.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p>Horizontal grouped buttons with icons:
		<iframe src="/resources/button/example28.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p>Mini horizontal grouped buttons by adding <code>data-mini="true"</code> to the controlgroup:
		<iframe src="/resources/button/example29.html" style="width:100%;height:90px;border:0px"></iframe></p>
			
		
		<p>Mini horizontal grouped buttons with icons:
		<iframe src="/resources/button/example30.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		
		<p>Horizontal grouped buttons, icon only:
		<iframe src="/resources/button/example31.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		
		<p>Mini horizontal grouped buttons, icon only:
		<iframe src="/resources/button/example32.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<h2>Theming buttons</h2>
			
		<p>jQuery Mobile has a rich theming system that gives you full control of how buttons are styled. When a link is added to a container, it is automatically assigned a theme swatch letter that matches its parent bar or content box to visually integrate the button into the parent container, like a chameleon. So a button placed inside a content container with a theme of "a" (black in the default theme) will be automatically assigned the button theme of "a" (charcoal in the default theme). Here are examples of the button theme pairings in the default theme. All buttons have the same HTML markup: 
		<iframe src="/resources/button/example33.html" style="width:100%;height:640px;border:0px"></iframe></p>

		<h2>Assigning theme swatches</h2>
		<p>Buttons can be manually assigned any of the button color swatches from the theme to add visual contrast with the container they sit inside by adding the <code> data-theme</code> attribute on the button markup and specifying a swatch letter. </p>

<pre><code>			
&lt;a href=&quot;index.html&quot; data-role=&quot;button&quot; data-theme=&quot;a&quot;&gt;Swatch a&lt;/a&gt;			
</code></pre>
				
		<p>Here are 5 buttons with icons that have a different swatch letter assigned via the <code>data-theme</code> attribute.
		<iframe src="/resources/button/example34.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<h2>Theme variations</h2>
		
		<p><strong>Swatch "a"</strong> on container with themed buttons inside
		<iframe src="/resources/button/example35.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p><strong>Swatch "b"</strong> on container with themed buttons inside
		<iframe src="/resources/button/example36.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p><strong>Swatch "c"</strong> on container with themed buttons inside
		<iframe src="/resources/button/example37.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p><strong>Swatch "d"</strong> on container with themed buttons inside
		<iframe src="/resources/button/example38.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		<p><strong>Swatch "e"</strong> on container with themed buttons inside
		<iframe src="/resources/button/example39.html" style="width:100%;height:90px;border:0px"></iframe></p>
		
		
	</longdesc>
	<added>1.0</added>
	<options>
		<option name="initSelector" default="button, [type='button'], [type='submit'], [type='reset']">
			<desc>This is used to define the selectors (element types, data roles, etc.) that will automatically be initialized as form buttons. To change which elements are initialized, bind this option to the mobileinit event:
<pre><code>
$( document ).bind( "mobileinit", function(){
	$.mobile.button.prototype.options.initSelector = ".myButtons";
}); 
</code></pre>
				<p><b>Note: This option applies only to form buttons, which are automatically initialized by the framework.</b></p>
			</desc>
			<type name="CSS selector string" />
		</option>
		<option name="corners" default="true">
			<desc>Applies the theme button border-radius if set to true.
<pre><code>
$('a').buttonMarkup({ corners: false });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-corners="false"</code>.
				<iframe src="/resources/button/example40.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="Boolean" />
		</option>
		<option name="icon" default="null">
			<desc>Applies an icon from the icon set.
<pre><code>
$('a').buttonMarkup({ icon: "star" });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-icon="star"</code>.
				<iframe src="/resources/button/example41.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="String" />
		</option>
		<option name="iconpos" default='"left"'>
			<desc>Positions the icon in the button. Possible values: left, right, top, bottom, none, notext. The notext value will display an icon-only button with no text feedback.
<pre><code>
$('a').buttonMarkup({ iconpos: "right" });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-iconpos="left"</code>.
				<iframe src="/resources/button/example42.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="String" />
		</option>
		<option name="iconshadow" default="true">
			<desc>Applies the theme shadow to the button's icon if set to true.
<pre><code>
$('a').buttonMarkup({ iconshadow: false });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-iconshadow="false"</code>.
				<iframe src="/resources/button/example43.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="Boolean" />
		</option>
		<option name="inline" default="null (false)">
			<desc>If set to true, this will make the button act like an inline button so the width is determined by the button's text. By default, this is null (false) so the button is full width, regardless of the feedback content. Possible values: true, false. 
<pre><code>
$('a').buttonMarkup({ inline: true });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-inline="true"</code>.
				<iframe src="/resources/button/example44.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="Boolean" />
		</option>
		<option name="mini" default="null (false)">
			<desc>If set to true, this will display a more compact version of the button that uses less vertical height. Possible values: true, false.
<pre><code>
$('a').buttonMarkup({ mini: true });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-mini="true"</code>.
				<iframe src="/resources/button/example45.html" style="width:100%;height:90px;border:0px"></iframe></p>
			</desc>
            <type name="Boolean" />
		</option>
		<option name="shadow" default="true">
			<desc>Applies the drop shadow style to the button if set to true.  
<pre><code>
$('a').buttonMarkup({ shadow: false });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-shadow="false"</code>.
				<iframe src="/resources/button/example46.html" style="width:100%;height:90px;border:0px"></iframe>
				</p>
			</desc>
            <type name="Boolean" />
		</option>
		<option name="theme" default="null, inherited from parent">
			<desc><p>Sets the color scheme (swatch) for all instances of this widget. It accepts a single letter from a-z that maps to one of the swatches included in your theme. By default, it will inherit the same swatch color as its parent container if not explicitly set. </p>
<pre><code>
$('a').buttonMarkup({ theme: "a" });
</code></pre>
				<p>Possible values: swatch letter (a-z).</p>
				<p>This option is also exposed as a data attribute: <code>data-theme="a"</code>.
				<iframe src="/resources/button/example47.html" style="width:100%;height:90px;border:0px"></iframe></p>
			</desc>
			<type name="String" />
		</option>
	</options>
	<events>
		<event name="create" type="buttoncreate">
			<desc>triggered when a form button is created</desc>
<pre><code>
$('[type="submit"]').button({
	create: function(event, ui) { ... }
});
</code></pre>
		</event>
	</events>
	<methods>
		<method name="enable">
			<desc>enable a disabled form button.
<pre><code>
$('[type="submit"]').button('enable');
</code></pre>
			</desc>
		</method>
		<method name="disable">
			<desc>disable a form button.
<pre><code>
$('[type="submit"]').button('disable');
</code></pre>
			</desc>
		</method>
		<method name="refresh">
			<desc>update the form button.
			<p>If you manipulate a form button via JavaScript, you must call the refresh method on it to update the visual styling.</p>
<pre><code>
$('[type="submit"]').button('refresh');
</code></pre>
			</desc>
		</method>
	</methods>
	<example>
	<!--<height>200</height>-->
		<desc>A basic example of a button</desc>
		<html><![CDATA[<div data-role="header">
		<h1>jQuery Mobile Example</h1>
	</div>
	<div data-role="content">
    	<a href="index.html" data-role="button">A link button</a> 
	</div>]]></html>
	</example>
	<category slug="widgets"/>
</entry>