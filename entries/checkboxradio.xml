<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="checkboxradio" namespace="fn" type="widget" widgetnamespace="mobile" event-prefix="checkboxradio">
	<title>Checkboxradio Widget</title>
	<desc>Creates a checkboxradio widget</desc>
	<longdesc>
		<h2>Checkboxes</h2>
		<p>Checkboxes are used to provide a list of options where more than one can be selected. Traditional desktop checkboxes are not optimized for touch input so in jQuery Mobile, we style the <code>label</code> for the checkboxes so they are larger and look clickable. A custom set of icons are added to the label to provide additional visual feedback. </p>
		<p>The checkbox controls below use standard input/label markup, but are styled to be more touch-friendly. The styled control you see is actually the label element, which sits over the real input, so if images fail to load, you'll still have a functional control. In most browsers, clicking the label automatically triggers a click on the input, but we've had to trigger the update manually for a few mobile browsers that don't do this natively. On the desktop, these controls are keyboard and screen-reader accessible.</p>
		<p>To create a single checkbox, add an <code>input</code> with a <code>type="checkbox"</code> attribute and a corresponding <code>label</code>. If the <code>input</code> isnâ€™t wrapped in its corresponding <code>label</code>, be sure to set the <code>for</code> attribute of the <code>label</code> to match the <code>id</code> of the <code>input</code> so they are semantically associated.</p>

<pre><code>
&lt;label&gt;&lt;input type="checkbox" name="checkbox-0" /&gt; I agree &lt;/label&gt;

&lt;input type="checkbox" name="checkbox-1" id="checkbox-1" class="custom" /&gt;
&lt;label for="checkbox-1"&gt;I agree&lt;/label&gt;
</code></pre>
		<p>The above snippets will produce two basic checkboxes. The default styles will set the width of the element to 100% of the parent container.
		<iframe src="/resources/checkbox/example1.html" style="width:100%;height:120px;border:0px"></iframe></p>

		<h3>Mini version</h3>

		<p>For a more compact version that is useful in toolbars and tight spaces, add the <code>data-mini="true"</code> attribute to the element to create a mini version. </p>

<pre><code>
&lt;input type="checkbox" name="checkbox-mini" id="checkbox-mini-1" class="custom" data-mini="true" /&gt;
&lt;label for="checkbox-mini-1"&gt;I agree&lt;/label&gt;
</code></pre>

		<p>This will produce a checkbox that is not as tall as the standard version and has a smaller text size.
		<iframe src="/resources/checkbox/example2.html" style="width:100%;height:70px;border:0px"></iframe></p>

		<h3>Field containers &amp; Legends</h3>

		<p>Because checkboxes use the <code>label</code> element for the text displayed next to the checkbox form element, we recommend wrapping the checkbox in a <code>fieldset</code> element that has a <code>legend</code> which acts as the title for the question. Add the <code>data-role="controlgroup"</code> attribute to the <code>fieldset</code> so it can be styled in a parallel way as text inputs, selects or other form elements.</p>

<pre><code>
&lt;div data-role="fieldcontain"&gt;
	&lt;fieldset data-role="controlgroup"&gt;
		&lt;legend&gt;Agree to the terms:&lt;/legend&gt;
		&lt;input type="checkbox" name="checkbox-2" id="checkbox-2" class="custom" /&gt;
		&lt;label for="checkbox-2"&gt;I agree&lt;/label&gt;
	&lt;/fieldset&gt;
&lt;/div&gt;
</code></pre>
		<iframe src="/resources/checkbox/example3.html" style="width:100%;height:100px;border:0px"></iframe>

		<h3>Vertically grouped checkboxes</h3>
		
		<p>Typically, there are multiple checkboxes listed under a question title. To visually integrate multiple checkboxes into a grouped button set, the framework will automatically remove all margins between buttons and round only the top and bottom corners of the set if there is a <code>data-role="controlgroup"</code> attribute on the <code>fieldset</code>.</p>
		
<pre><code>
&lt;div data-role="fieldcontain"&gt;
	&lt;fieldset data-role="controlgroup"&gt;
		&lt;legend&gt;Choose as many snacks as you'd like:&lt;/legend&gt;
			&lt;input type="checkbox" name="checkbox-1a" id="checkbox-1a" class="custom" /&gt;
			&lt;label for="checkbox-1a"&gt;Cheetos&lt;/label&gt;
    	            
			&lt;input type="checkbox" name="checkbox-2a" id="checkbox-2a" class="custom" /&gt;
			&lt;label for="checkbox-2a"&gt;Doritos&lt;/label&gt;
			
			&lt;input type="checkbox" name="checkbox-3a" id="checkbox-3a" class="custom" /&gt;
			&lt;label for="checkbox-3a"&gt;Fritos&lt;/label&gt;
	
			&lt;input type="checkbox" name="checkbox-4a" id="checkbox-4a" class="custom" /&gt;
			&lt;label for="checkbox-4a"&gt;Sun Chips&lt;/label&gt;
		&lt;/fieldset&gt;
&lt;/div&gt;
</code></pre>

		<iframe src="/resources/checkbox/example4.html" style="width:100%;height:220px;border:0px"></iframe>
		
		<h3>Horizontal toggle sets</h3>
		
		<p>Checkboxes can also be used for grouped button sets where more than one button can be selected at once, such as the bold, italic and underline button group seen in word processors. To make a horizontal button set, add the <code>data-type="horizontal"</code> to the <code>fieldset</code>. </p>
		
<pre><code>
&lt;div data-role="fieldcontain"&gt;
	&lt;fieldset data-role="controlgroup" data-type="horizontal"&gt;
		&lt;legend&gt;Font styling:&lt;/legend&gt;
		&lt;input type="checkbox" name="checkbox-6" id="checkbox-6" class="custom" /&gt;
		&lt;label for="checkbox-6"&gt;b&lt;/label&gt;
	
		&lt;input type="checkbox" name="checkbox-7" id="checkbox-7" class="custom" /&gt;
		&lt;label for="checkbox-7"&gt;&lt;em&gt;i&lt;/em&gt;&lt;/label&gt;

		&lt;input type="checkbox" name="checkbox-8" id="checkbox-8" class="custom" /&gt;
		&lt;label for="checkbox-8"&gt;u&lt;/label&gt;    
	&lt;/fieldset&gt;
&lt;/div&gt;
</code></pre>

		<p>The framework will float the labels so they sit side-by-side on a line, hide the checkbox icons and only round the left and right edges of the group.<iframe src="/resources/checkbox/example5.html" style="width:100%;height:100px;border:0px"></iframe></p>

		<h2>Radio buttons</h2>
		<p>Radio buttons are used to provide a list of options where only a single item can be selected. Traditional desktop radio buttons are not optimized for touch input so jQuery Mobile styles the <code>label</code> for the radio buttons so they are larger and look clickable. A custom set of icons are added to the label to provide additional visual feedback. </p>
		<p>The radio button controls below use standard input/label markup, but are styled to be more touch-friendly. The styled control you see is actually the label element, which sits over the real input, so if images fail to load, you'll still have a functional control. In most browsers, clicking the label automatically triggers a click on the input, but we've had to trigger the update manually for a few mobile browsers that don't do this natively. On the desktop, these controls are keyboard and screen-reader accessible.</p>

		<h3>Vertically grouped radio buttons</h3>
		
		<p>To create a set of radio buttons, add an input with a type="radio" attribute and a corresponding label. Set the for attribute of the label to match the id of the input so they are semantically associated.</p>
		<p>The label element is displayed next to the radio form element. Wrap the radio buttons in a fieldset element that has a legend which acts as the title for the question.</p>
		<p>To visually integrate multiple radio buttons into a vertically grouped button set, the framework will automatically remove all margins between buttons and round only the top and bottom corners of the set if there is a data-role="controlgroup" attribute on the container.</p>

<pre><code>
&lt;fieldset data-role="controlgroup"&gt;
	&lt;legend&gt;Choose a pet:&lt;/legend&gt;
	&lt;input type="radio" name="radio-choice" id="radio-choice-1" value="choice-1" checked="checked" /&gt;
	&lt;label for="radio-choice-1"&gt;Cat&lt;/label&gt;

	&lt;input type="radio" name="radio-choice" id="radio-choice-2" value="choice-2" /&gt;
	&lt;label for="radio-choice-2"&gt;Dog&lt;/label&gt;

	&lt;input type="radio" name="radio-choice" id="radio-choice-3" value="choice-3" /&gt;
	&lt;label for="radio-choice-3"&gt;Hamster&lt;/label&gt;

	&lt;input type="radio" name="radio-choice" id="radio-choice-4" value="choice-4" /&gt;
	&lt;label for="radio-choice-4"&gt;Lizard&lt;/label&gt;
&lt;/fieldset&gt;
</code></pre>

		<p>This will produce a vertically grouped radio button set. The default styles set the width of the button group to 100% of the parent container and stacks the label on a separate line.
		<iframe src="/resources/radiobutton/example1.html" style="width:100%;height:210px;border:0px"></iframe></p>

		<h3>Mini version</h3>

		<p>For a more compact version that is useful in toolbars and tight spaces, add the <code>data-mini="true"</code> attribute to the element to create a mini version. </p>

<pre><code>
&lt;fieldset data-role="controlgroup" data-mini="true"&gt;
	&lt;input type="radio" name="radio-mini" id="radio-mini-1" value="choice-1" checked="checked" /&gt;
	&lt;label for="radio-mini-1"&gt;Credit&lt;/label&gt;

	&lt;input type="radio" name="radio-mini" id="radio-mini-2" value="choice-2" /&gt;
	&lt;label for="radio-mini-2"&gt;Debit&lt;/label&gt;

	&lt;input type="radio" name="radio-mini" id="radio-mini-3" value="choice-3" /&gt;
	&lt;label for="radio-mini-3"&gt;Cash&lt;/label&gt;
&lt;/fieldset&gt;
</code></pre>

		<p>This will produce a radio button that is not as tall as the standard version and has a smaller text size.
		<iframe src="/resources/radiobutton/example2.html" style="width:100%;height:130px;border:0px"></iframe></p>

		<h3>Field containers</h3>

		<p>Optionally wrap the radiobuttons in a container with the <code>data-role="fieldcontain"</code> attribute to help visually group it in a longer form.</p>

<pre><code>
&lt;div data-role="fieldcontain"&gt;
	&lt;fieldset data-role="controlgroup"&gt;
		&lt;legend&gt;Choose a pet:&lt;/legend&gt;
		&lt;input type="radio" name="radio-choice-2" id="radio-choice-21" value="choice-1" checked="checked" /&gt;
		&lt;label for="radio-choice-1">Cat&lt;/label&gt;

		&lt;input type="radio" name="radio-choice-2" id="radio-choice-22" value="choice-2" /&gt;
		&lt;label for="radio-choice-2">Dog&lt;/label&gt;

		&lt;input type="radio" name="radio-choice-2" id="radio-choice-23" value="choice-3" /&gt;
		&lt;label for="radio-choice-3">Hamster&lt;/label&gt;

		&lt;input type="radio" name="radio-choice-2" id="radio-choice-24" value="choice-4" /&gt;
		&lt;label for="radio-choice-4">Lizard&lt;/label&gt;
	&lt;/fieldset&gt;
&lt;/div&gt;
</code></pre>

		<iframe src="/resources/radiobutton/example3.html" style="width:100%;height:210px;border:0px"></iframe>

		<h3>Horizontal radio button sets</h3>

		<p>Radio buttons can also be used for grouped button sets where only a single button can be selected at once, such as a view switcher control. To make a horizontal radio button set, add the <code>data-type="horizontal"</code> to the <code>fieldset</code>.</p>

<pre><code>
&lt;fieldset data-role="controlgroup" data-type="horizontal" &gt;
</code></pre>

		<iframe src="/resources/radiobutton/example4.html" style="width:100%;height:90px;border:0px"></iframe>

		<p>The labels float so they sit side-by-side on a line. The radio button icons are hidden and only the left and right edges of the group are rounded.</p>
		
	</longdesc>
	<added>1.0</added>
	<options>
		<option name="mini" default="false" example-value="true">
			<desc>Sets the size of the element to a more compact, mini version.
				<p>This option is also exposed as a data attribute: <code>data-mini="true"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="theme" default="null, inherited from parent" example-value='"a"'>
			<desc>Sets the color scheme (swatch) for all instances of this widget. It accepts a single letter from a-z that maps to the swatches included in your theme. By default, it will inherit the same swatch color as its parent container if not explicitly set.

				<p>Possible values: swatch letter (a-z).</p>
				<p>This option is also exposed as a data attribute: <code>data-theme="a"</code>.</p>
			</desc>
			<type name="String" />
		</option>
	</options>
	<events>
		<event name="create">
			<desc>triggered when a checkboxradio is created</desc>
			<argument name="event" type="Event">
			</argument>
			<argument name="ui" type="Object">
			</argument>
		</event>
	</events>
	<methods>
		<method name="enable">
			<desc>enable a disabled checkboxradio.
			</desc>
		</method>
		<method name="disable">
			<desc>disable a checkboxradio.
			</desc>
		</method>
		<method name="refresh">
		<example>$( ".selector" ).prop( "checked", true ).checkboxradio( "refresh" );</example>
		 
			<desc>update the checkboxradio.
				<p>If you manipulate a checkboxradio via JavaScript, you must call the refresh method on it to update the visual styling. </p>
			</desc>
		</method>
	</methods>
	<example>
		<desc>A basic example of a checkbox in a fieldcontainer</desc>
		<html><![CDATA[
<div data-role="page" id="page1">
	<div data-role="header">
		<h1>jQuery Mobile Example</h1>
	</div>
	<div data-role="content">
		<div data-role="fieldcontain">
			<form>
				<fieldset data-role="controlgroup">
					<legend>Agree to the terms:</legend>
					<input type="checkbox" name="checkbox-2" id="checkbox-2" class="custom" />
					<label for="checkbox-2">I agree</label>
				</fieldset>
			</form>	
		</div>
	</div>	
</div>
]]></html>
	</example>
	<example>
		<height>300</height>
		<desc>A basic example of vertically grouped radio buttons</desc>
		<html><![CDATA[
<div data-role="page" id="page1">
	<div data-role="header">
		<h1>jQuery Mobile Example</h1>
	</div>
	<div data-role="content">
		<form>
			<fieldset data-role="controlgroup">
				<legend>Choose a pet:</legend>
				<input type="radio" name="radio-choice" id="radio-choice-1" value="choice-1" checked="checked" />
				<label for="radio-choice-1">Cat</label>

				<input type="radio" name="radio-choice" id="radio-choice-2" value="choice-2" />
				<label for="radio-choice-2">Dog</label>

				<input type="radio" name="radio-choice" id="radio-choice-3" value="choice-3" />
				<label for="radio-choice-3">Hamster</label>

				<input type="radio" name="radio-choice" id="radio-choice-4" value="choice-4" />
				<label for="radio-choice-4">Lizard</label>
			</fieldset> 
		</form>
	</div>
</div>
]]></html>
	</example>
	<category slug="widgets"/>
</entry>
