<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="checkbox" namespace="fn" type="widget" widgetnamespace="mobile">
	<title>Checkbox Widget</title>
	<desc>Creates a checkbox widget</desc>
	<longdesc>
		<p>Checkboxes are used to provide a list of options where more than one can be selected. Traditional desktop checkboxes are not optimized for touch input so in jQuery Mobile, we style the <code>label</code> for the checkboxes so they are larger and look clickable. A custom set of icons are added to the label to provide additional visual feedback. </p>
		<p>The checkbox controls below use standard input/label markup, but are styled to be more touch-friendly. The styled control you see is actually the label element, which sits over the real input, so if images fail to load, you'll still have a functional control. In most browsers, clicking the label automatically triggers a click on the input, but we've had to trigger the update manually for a few mobile browsers that don't do this natively. On the desktop, these controls are keyboard and screen-reader accessible.</p>
		<p>To create a single checkbox, add an <code>input</code> with a <code>type="checkbox"</code> attribute and a corresponding <code>label</code>. If the <code>input</code> isnâ€™t wrapped in its corresponding <code>label</code>, be sure to set the <code>for</code> attribute of the <code>label</code> to match the <code>id</code> of the <code>input</code> so they are semantically associated.</p>

<pre><code>
&lt;label&gt;&lt;input type="checkbox" name="checkbox-0" /&gt; I agree &lt;/label&gt;

&lt;input type="checkbox" name="checkbox-1" id="checkbox-1" class="custom" /&gt;
&lt;label for="checkbox-1"&gt;I agree&lt;/label&gt;
</code></pre>
		<p>The above snippets will produce two basic checkboxes. The default styles will set the width of the element to 100% of the parent container.
		<iframe src="/resources/checkbox/example1.html" style="width:100%;height:120px;border:0px"></iframe></p>

		<h3>Mini version</h3>

		<p>For a more compact version that is useful in toolbars and tight spaces, add the <code>data-mini="true"</code> attribute to the element to create a mini version. </p>

<pre><code>
&lt;input type="checkbox" name="checkbox-mini" id="checkbox-mini-1" class="custom" data-mini="true" /&gt;
&lt;label for="checkbox-mini-1"&gt;I agree&lt;/label&gt;
</code></pre>

		<p>This will produce a checkbox that is not as tall as the standard version and has a smaller text size.
		<iframe src="/resources/checkbox/example2.html" style="width:100%;height:70px;border:0px"></iframe></p>

		<h3>Field containers &amp; Legends</h3>

		<p>Because checkboxes use the <code>label</code> element for the text displayed next to the checkbox form element, we recommend wrapping the checkbox in a <code>fieldset</code> element that has a <code>legend</code> which acts as the title for the question. Add the <code>data-role="controlgroup"</code> attribute to the <code>fieldset</code> so it can be styled in a parallel way as text inputs, selects or other form elements.</p>

<pre><code>
&lt;div data-role="fieldcontain"&gt;
	&lt;fieldset data-role="controlgroup"&gt;
		&lt;legend&gt;Agree to the terms:&lt;/legend&gt;
		&lt;input type="checkbox" name="checkbox-2" id="checkbox-2" class="custom" /&gt;
		&lt;label for="checkbox-2">I agree&lt;/label&gt;
	&lt;/fieldset&gt;
&lt;/div&gt;
</code></pre>
		<iframe src="/resources/checkbox/example3.html" style="width:100%;height:100px;border:0px"></iframe>

		<h3>Vertically grouped checkboxes</h3>

		<p>Checkboxes can also be used for grouped button sets where more than one button can be selected at once, such as the bold, italic and underline button group seen in word processors. To make a horizontal button set, add the <code>data-type="horizontal"</code> to the <code>fieldset</code>. 
		<iframe src="/resources/checkbox/example4.html" style="width:100%;height:220px;border:0px"></iframe></p>

<pre><code>
&lt;fieldset data-role="controlgroup" data-type="horizontal" &gt;
</code></pre>

		<p>The framework will float the labels so they sit side-by-side on a line, hide the checkbox icons and only round the left and right edges of the group.<iframe src="/resources/checkbox/example5.html" style="width:100%;height:100px;border:0px"></iframe></p>
	</longdesc>
	<added>1.0</added>
	<options>
		<option name="mini" default="false">
			<desc>Sets the size of the element to a more compact, mini version.
<pre><code>
$("input[type='checkbox']").checkboxradio({ mini: true });
</code></pre>
				<p>This option is also exposed as a data attribute: <code>data-mini="true"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="theme" default="null, inherited from parent">
			<desc>Sets the color scheme (swatch) for all instances of this widget. It accepts a single letter from a-z that maps to the swatches included in your theme. By default, it will inherit the same swatch color as its parent container if not explicitly set.
<pre><code>
$("input[type='radio']").checkboxradio({ theme: "a" });
</code></pre>
				<p>Possible values: swatch letter (a-z).</p>
				<p>This option is also exposed as a data attribute: <code>data-theme="a"</code>.</p>
			</desc>
			<type name="String" />
		</option>
	</options>
	<events>
		<event name="create" type="checkboxradiocreate">
			<desc>triggered when a checkbox is created</desc>
<pre><code>
$("input[type='checkbox']").checkboxradio({
	create: function(event, ui) { ... }
});
</code></pre>
		</event>
	</events>
	<methods>
		<method name="enable">
			<desc>enable a disabled checkbox.
<pre><code>
$("input[type='checkbox']").checkboxradio('enable');
</code></pre>
			</desc>
		</method>
		<method name="disable">
			<desc>disable a checkbox.
<pre><code>
$("input[type='checkbox']").checkboxradio('disable');
</code></pre>
			</desc>
		</method>
		<method name="refresh">
			<desc>update the checkbox.
				<p>If you manipulate a checkbox via JavaScript, you must call the refresh method on it to update the visual styling. </p>
<pre><code>
$("input[type='checkbox']:first").attr("checked",true).checkboxradio("refresh");
</code></pre>
			</desc>
		</method>
	</methods>
	<example>
		<desc>A basic example of a checkbox in a fieldcontainer</desc>
		<code><![CDATA[]]></code>
		<html><![CDATA[  
		<div data-role="fieldcontain">
			<fieldset data-role="controlgroup">
				<legend>Agree to the terms:</legend>
				<input type="checkbox" name="checkbox-2" id="checkbox-2" class="custom" />
				<label for="checkbox-2">I agree</label>
			</fieldset>
		</div>	]]></html>
	</example>
	<category slug="widgets"/>
</entry>