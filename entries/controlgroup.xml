<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="controlgroup" namespace="fn" type="widget" widgetnamespace="mobile" event-prefix="controlgroup" init-selector=":jqmData(role=&#39;controlgroup&#39;)">
	<title>Controlgroup Widget</title>
	<desc>Groups buttons together.</desc>
	<longdesc>
		<p>Occasionally, you may want to visually group a set of buttons to form a single block that looks contained like a navigation component. To get this effect, wrap a set of buttons in a container with the <code>data-role="controlgroup"</code> attribute &#8212; the framework will create a vertical button group, remove all margins and drop shadows between the buttons, and only round the first and last buttons of the set to create the effect that they are grouped together. </p>

<pre><code><![CDATA[
<div data-role="controlgroup">
  <a href="#" class="ui-btn ui-corner-all">Yes</a>
  <a href="#" class="ui-btn ui-corner-all">No</a>
  <a href="#" class="ui-btn ui-corner-all">Maybe</a>
</div>
]]></code></pre>

		<p>This will result in the following button group:
		<iframe src="/resources/controlgroup/example1.html" style="width:100%;height:150px;border:0px"></iframe></p>

		<p>By adding the <code>data-type="horizontal"</code> attribute to the <code>controlgroup</code> container, you can swap to a horizontal-style group that floats the buttons side-by-side and sets the width to only be large enough to fit the content. (Be aware that these will wrap to multiple lines if the number of buttons or the overall text length is too wide for the screen.)</p>

		<p>Horizontal grouped buttons:
		<iframe src="/resources/controlgroup/example2.html" style="width:100%;height:150px;border:0px"></iframe></p>

        <h4>Labels</h4>
		<p>If you use a controlgroup for <code>input</code>, <code>button</code> or <code>select</code> buttons we recommend wrapping them in a <code>fieldset</code> element that has a <code>legend</code> which acts as the combined label for the group. The <code>label</code> elements of each individual button in the group will be hidden for styling purposes, and are only accessible by screen readers. Using the <code>label</code> as a wrapper around the form element prevents the framework from hiding it, so you have to use the <code>for</code> attribute to associate the <code>label</code> with the input.</p>

	</longdesc>
	<added>1.3</added>
	<options>
		<option name="corners" default="true" example-value="false">
			<desc>
				<p>Sets whether to draw the controlgroup with rounded corners.</p>
				<p>This option is also exposed as a data attribute: <code>data-corners="false"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<xi:include href="../includes/widget-option-defaults.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-option-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="excludeInvisible" default="true" example-value="false">
			<desc>
				<p>Sets whether to exclude invisible children in the assignment of rounded corners.</p>
				<p>When set to <code>false</code>, all children of a controlgroup are taken into account when assigning rounded corners, including hidden children. Thus, if, for example, the controlgroup's first child is hidden, the controlgroup will, in effect, not have rounded corners on the top edge.</p>
				<p>This option is also exposed as a data attribute: <code>data-exclude-invisible="false"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<xi:include href="../includes/widget-option-initSelector.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-option-mini.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="shadow" default="false" example-value="true">
			<desc>
				<p>Sets whether a drop shadow is drawn around the controlgroup.</p>
				<p>This option is also exposed as a data attribute: <code>data-shadow="false"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="theme" default="null, inherited from parent" example-value='"b"'>
			<desc>Sets the color scheme (swatch) for the controlgroup. It accepts a single letter from a-z that maps to the swatches included in your theme.
				<p>Possible values: swatch letter (a-z).</p>
				<p>This option is also exposed as a data attribute: <code>data-theme="b"</code>.</p>
			</desc>
			<type name="String" />
		</option>
		<option name="type" default="vertical" example-value='"horizontal"'>
			<desc>
				<p>Sets whether children should be stacked on top of each other or next to each other. If set to "horizontal", the children of the controlgroup will be stacked next to each other.</p>
				<p>This option is also exposed as a data attribute: <code>data-type="horizontal"</code>.</p>
			</desc>
			<type name="String" />
		</option>
	</options>
	<events>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</events>
	<methods>
		<method name="container">
			<desc>Obtain the container element within which the controlgroup's child elements are to be placed.
<pre><code><![CDATA[
$( ".selector" ).controlgroup( "container" );
]]></code></pre>
			</desc>
		</method>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>
		<desc>A basic example of a controlgroup.</desc>
		<html><![CDATA[
<div data-role="page" id="page1">
	<div role="main" class="ui-content">
		<div data-role="controlgroup">
			<a href="#" class="ui-btn ui-corner-all">Yes</a>
			<a href="#" class="ui-btn ui-corner-all">No</a>
			<a href="#" class="ui-btn ui-corner-all">Maybe</a>
		</div>
	</div>
</div>
]]></html>
	</example>
	<category slug="widgets"/>
</entry>
