<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="collapsible" namespace="fn" type="widget" widgetnamespace="mobile" >
	<title>Collapsible Widget</title>
	<desc>Creates a collapsible block of content</desc>
	<longdesc>
		<p>To create a collapsible block of content, create a container and add the data-role="collapsible" attribute. Using data-content-theme attribute allows you to set a theme for the content of the collapsible.</p>
		<p>Directly inside this container, add any header (H1-H6) or legend element. The framework will style the header to look like a clickable button and add a "+" icon to the left to indicate it's expandable.</p>
		<p>After the header, add any HTML markup you want to be collapsible. The framework will wrap this markup in a container that will be hidden/shown when the heading is clicked.</p>
		<p>By default, the content will be collapsed.</p>
<pre><code>
&lt;div data-role=&quot;collapsible&quot;&gt;
	&lt;h3&gt;I&#x27;m a header&lt;/h3&gt;
	&lt;p&gt;I&#x27;m the collapsible content. By default I'm closed, but you can click the header to open me.&lt;/p&gt;
&lt;/div&gt;
	</code></pre>
		<p>This code will create a collapsible widget like this:
		<iframe src="/resources/collapsible/example1.html" style="width:100%;height:140px;border:0px"></iframe>
		</p>
	
		<h3>Expanding collapsibles on load</h3>

		<p>To expand the content when the page loads, add the <code>data-collapsed="false"</code> attribute to the wrapper.</p>

<pre><code>
&lt;div data-role=&quot;collapsible&quot; data-collapsed=&quot;false&quot;&gt;
</code></pre>

		<p>This code will create a collapsible widget like this:
		<iframe src="/resources/collapsible/example2.html" style="width:100%;height:140px;border:0px"></iframe></p>
	
		<h3>Non-inset collapsibles</h3>

		<p>By default collapsibles have an inset appearance. To make them full width without corner styling add the <code>data-inset="false"</code> attribute to the element.</p>

<pre><code>
&lt;div data-role=&quot;collapsible&quot; data-inset=&quot;false&quot;&gt;
</code></pre>

		<p>This code will create a non-inset collapsible:
		<iframe src="/resources/collapsible/example3.html" style="width:100%;height:140px;border:0px"></iframe></p>
	
		<h3>Mini collapsibles</h3>

		<p>For a more compact version that is useful in toolbars and tight spaces, add the <code>data-mini="true"</code> attribute to the element to create a <a href="../forms/forms-all-mini.html">mini version</a>.</p>

<pre><code>
&lt;div data-role=&quot;collapsible&quot; data-mini=&quot;true&quot;&gt;
</code></pre>
    
		<p>This code will create a mini collapsible widget:
		<iframe src="/resources/collapsible/example4.html" style="width:100%;height:140px;border:0px"></iframe></p>
	
		<h3>Custom icons</h3>

		<p>Collapsible headings’ default icons can be overridden by using the <code>data-collapsed-icon</code> and <code>data-expanded-icon</code> attributes. In the below case, <code>data-collapsed-icon="arrow-r"</code> and <code>data-expanded-icon="arrow-d"</code>.
		<iframe src="/resources/collapsible/example5.html" style="width:100%;height:140px;border:0px"></iframe></p>
	
		<h3>Icon positioning</h3>

		<p>Collapsible headings’ default icon positioning can be overridden by using the <code>data-iconpos</code> attribute. In the below case, <code>data-iconpos="right"</code>.
		<iframe src="/resources/collapsible/example6.html" style="width:100%;height:140px;border:0px"></iframe></p>
	
		<h3>Theming collapsible content</h3>

		<p>Collapsible content is minimally styled - we add only a bit of margin between the bar and content, and the header adopts the default theme styles of the container it sits within.</p>
		
		<p>To provide a stronger visual connection between the collapsible header and content, add the <code>data-content-theme</code> attribute to the wrapper and specify a theme swatch letter. This will apply the swatch's border and <em>flat</em> background color (not the gradient) to the content block and changes the corner rounding to square off the bottom of the header and round the bottom of the content block instead to visually group these elements.</p>
		
<pre><code>
&lt;div data-role=&quot;collapsible&quot; data-content-theme=&quot;c&quot;&gt;
	&lt;h3&gt;Header&lt;/h3&gt;
	&lt;p&gt;I&#x27;m the collapsible content with a themed content block set to "c".&lt;/p&gt;
&lt;/div&gt;
</code></pre>

		<iframe src="/resources/collapsible/example7.html" style="width:100%;height:140px;border:0px"></iframe>

		<h3>Theming collapsible headers</h3>

		<p>To set the theme on a collapsible header button, add the <code>data-theme</code> attribute to the wrapper and specify a swatch letter. Note that you can mix and match swatch letters between the header and content with these theme attributes.</p>

<pre><code>&lt;div data-role=&quot;collapsible&quot; data-theme=&quot;a&quot; data-content-theme=&quot;a&quot;&gt;
	&lt;h3&gt;Header swatch A&lt;/h3&gt;
	&lt;p&gt;I&#x27;m the collapsible content with a themed content block set to "a".&lt;/p&gt;
&lt;/div&gt;
</code></pre>

		<iframe src="/resources/collapsible/example8.html" style="width:100%;height:260px;border:0px"></iframe>

		<h3>Nested Collapsibles</h3>

		<p>Collapsibles can be nested inside each other if needed. In this example, we're setting the content theme to provide clearer visual connection between the levels.
		<iframe src="/resources/collapsible/example9.html" style="width:100%;height:540px;border:0px"></iframe></p>
		
		<h3>Collapsible sets (accordions)</h3>

		<p>It's possible to combine multiple collapsibles into a grouped set that acts like an <a href="/collapsible-set/">accordion widget</a>.</p>

  	</longdesc>
	<added>1.0</added>
	<options>
		<option name="collapseCueText" default='" click to collapse contents"'  example-value='" collapse with a click"'>
			<desc>This text is used to provide audible feedback for users with screen reader software. 
			</desc>
			<type name="String" />
		</option>
		<option name="collapsed" default="true" example-value="false">
			<desc>When false, the container is initially expanded with a minus icon in the header. 
				<p>This option is also exposed as a data attribute:<code>data-collapsed="false"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="collapsedIcon" default='"plus"' example-value='"arrow-r"'>
			<desc>Sets the icon for the header of the collapsible container when in a collapsed state. 
				<p>This option is also exposed as a data attribute:<code>data-collapsed-icon="arrow-r"</code>.</p>
			</desc>
			<type name="String" />
		</option>
		<option name="corners" default="true" example-value="false">
			<desc>Applies the theme border-radius if set to true.  
				<p>This option is also exposed as a data attribute:<code>data-corners="false"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="expandCueText" default='" click to expand contents"' example-value='" expand with a click"'>
			<desc>This text is used to provide audible feedback for users with screen reader software. 
			</desc>
			<type name="String" />
		</option>
		<option name="expandedIcon" default='"minus"' example-value='"arrow-d"'>
			<desc>Sets the icon for the header of the collapsible container when in an expanded state. 
				<p>This option is also exposed as a data attribute: <code>data-expanded-icon="arrow-d"</code>.</p>
			</desc>
			<type name="String" />
		</option>
		<option name="heading" default='"h1,h2,h3,h4,h5,h6,legend"' example-value='".mycollapsibleheading"'>
			<desc>Within the collapsible container, the first immediate child element that matches this selector will be used as the header for the collapsible.
			</desc>
			<type name="String" />
		</option>
		<option name="iconpos" default='"left"' example-value='"right"'>
			<desc>Positions the icon in the collapsible header. 
				<p>Possible values: left, right, top, bottom, none, notext.</p>
				<p>This option is also exposed as a data attribute: <code>data-iconpos="right"</code>.</p>
			</desc>
			<type name="String" />
		</option>
		<option name="initSelector"  default='":jqmData(role=&#39;collapsible&#39;)"'>
			<desc>This is used to define the selectors (element types, data roles, etc.) that will automatically be initialized as collapsibles. To change which elements are initialized, bind this option to the mobileinit event:
<pre><code>
$( document ).on( "mobileinit", function() {
	$.mobile.collapsible.prototype.options.initSelector = ".mycollapsible";
});
</code></pre>
			</desc>
			<type name="CSS selector string" />
		</option>
		<option name="inset"  default="true" example-value="false">
			<desc>By setting this option to false the element will get a full width appearance without corners. If the value is false for an individual collapsible container, but that container is part of a collapsible set, then the value is inherited from the parent collapsible set. 
				<p>This option is also exposed as a data attribute: <code>data-inset="false"</code>.</p>
 			</desc>
			<type name="Boolean" />
		</option>
		<option name="mini"  default="false" example-value="true">
			<desc>Sets the size of the element to a more compact, mini version. If the value is false for an individual collapsible container, but that container is part of a collapsible set, then the value is inherited from the parent collapsible set. 
				<p>This option is also exposed as a data attribute: <code>data-mini="true"</code>.</p>
			</desc>
			<type name="Boolean" />
		</option>
		<option name="theme" default="null, inherited from parent" example-value='"a"'>
			<desc>Sets the color scheme (swatch) for the collapsible. It accepts a single letter from a-z that maps to the swatches included in your theme. 
				<p>Possible values: swatch letter (a-z).</p>
				<p>This option is also exposed as a data attribute: <code>data-theme="a"</code>.</p>
			</desc>
			<type name="String" />
		</option>
	</options>
	<events>
		<event name="create" type="collapsiblecreate">	
			<desc>Triggered when a collapsible is created
			</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="collapse">
			<desc>Triggered when a collapsible is collapsed
			</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="expand">
			<desc>Triggered when a collapsible is expanded
			</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
	</events>
	<methods>
	</methods>
	<example>
		<desc>A basic example of a collapsible content block.</desc>
		<html><![CDATA[<div data-role="header">
		<h1>jQuery Mobile Example</h1>
	</div>
	<div data-role="content">
		<div data-role="collapsible">
			<h3>I'm a header</h3>
			<p>I'm the collapsible content. By default I'm closed, but you can click the header to open me.</p>
		</div>
	</div>]]></html>
	</example>
	<category slug="widgets"/>
</entry>
